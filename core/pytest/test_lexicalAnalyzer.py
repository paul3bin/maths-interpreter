
from core import main_execute
import pytest

@pytest.mark.parametrize("test_input,expected",[("1+2",3),("5*10",50),("1 - 5 - 10",-14),("-0.02",-0.02),
("12+(5*3.3)",28.5),("500 + 2 * 5 / 4 - 8",494.5),("950 / (5*2) - 10",85),("10 + (5+2) * (5*3) - (9-2) / (1/2)",101),
("(90 + 10) + (10 * 2) * (6 - 5) - (4 / 2)",118),("(5 / 2) * 10",25),("2 + -1",1),("20 * -2",-40),
("40 + 6 / (4 - 5) - -10",44),("2 ^ 4",16),("2 + 3 ^ 4 ",83),("3 - 4 + 9^2 * (10 * 2)",1619),("14 * 2 + 9 - 4 / 1 ^3",33),

("x=5",5),("x^2-1",24),("x = 2",2),(" x + 4",6),("x = 4 *2",8),("x = 140",140),("x - 100",40),
("x>10",True),("x % 16",12),("500 % 42 + 5",43),


("50.12 * -8",-400.96),("-50 - -60",10),("(-6 + 2 /4) * (-3^2)",49.5),("2 > 4 ",False),("4 + 2 < 10",True),("400 % 3 > 1000",False),
("5 ^ 2 > 1",True),("10+6/2^1-8/4*2  >  2^1+6/2 -1*1",True),("C=15>5",True),

("x=20",20),("y=50",50),("x+y",70),



("sin(90)",1),("cos(180)",-1),("tan(0)",0),("fact(5)",120),("root(25)",5)])


def test_get_tokens(test_input,expected):
    assert main_execute(test_input)==expected

   